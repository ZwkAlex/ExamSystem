DROP TABLE  IF EXISTS User;
CREATE TABLE User(
id VARCHAR(20)  NOT NULL PRIMARY KEY,
password VARCHAR(20) NOT NULL ,
role VARCHAR(20)  NOT NULL,
token LONGTEXT
);
INSERT INTO User VALUES('1','1',"ROLE_STUDENT",null);
INSERT INTO User VALUES('2','1',"ROLE_TEACHER",null);
SELECT * FROM User;


DROP TABLE IF EXISTS student;
CREATE TABLE student(
sid VARCHAR(20) NOT NULL PRIMARY KEY,
sname VARCHAR(255) NOT NULL,
college VARCHAR(64),
smajorid VARCHAR(20)
);
INSERT INTO student VALUES('1', 'sname', 'college', '1');
SELECT * FROM student;

DROP TABLE IF EXISTS teacher;
CREATE TABLE teacher(
tid VARCHAR(20) NOT NULL PRIMARY KEY,
tname VARCHAR(255) NOT NULL,
college VARCHAR(64)
);
INSERT INTO teacher VALUES('2', 'tname', 'college');
SELECT * FROM teacher;

DROP TABLE IF EXISTS major;
CREATE TABLE major(
smajorid VARCHAR(20) NOT NULL PRIMARY KEY,
mname VARCHAR(255) NOT NULL
);
INSERT INTO major VALUES('1', 'mname');
SELECT * FROM major;

DROP TABLE IF EXISTS s_e;
CREATE TABLE s_e(
sid VARCHAR(20) NOT NULL,
examid VARCHAR(64) NOT NULL,
status INT DEFAULT 0,
score DOUBLE DEFAULT -1
);
INSERT INTO s_e(sid,examid,status) VALUES('1', '1', 0);
INSERT INTO s_e(sid,examid,status) VALUES('1', '2', 1);
INSERT INTO s_e(sid,examid,status) VALUES('1', '3', 2);
SELECT * FROM s_e;

DROP TABLE IF EXISTS course;
CREATE TABLE course(
courseid VARCHAR(64)  NOT NULL PRIMARY KEY,
tid VARCHAR(20),
coursename VARCHAR(256) DEFAULT NULL,
description TEXT DEFAULT NULL,
isValid BOOLEAN DEFAULT true
);
INSERT INTO course VALUES('1','2', 'cname','description',true);
SELECT * FROM course;

DROP TABLE IF EXISTS exam;
CREATE TABLE exam(
examid VARCHAR(64)  NOT NULL PRIMARY KEY,
courseid VARCHAR(64) NOT NULL,
startdate TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
enddate TIMESTAMP NOT NULL DEFAULT  CURRENT_TIMESTAMP,
duration INT,
totalScore INT DEFAULT 0,
isValid BOOLEAN DEFAULT true
);
INSERT INTO exam VALUES('1','1', now(), date_add(now(), interval 30 day),60,0,true);
INSERT INTO exam VALUES('2','1', now(), date_add(now(), interval 50 day),120,0,true);
INSERT INTO exam VALUES('3','1', now(), date_add(now(), interval 60 day),150,0,true);
SELECT * FROM exam;

DROP TABLE IF EXISTS question;
CREATE TABLE question(
questionid VARCHAR(64)  NOT NULL,
examid  VARCHAR(64),
type INT NOT NULL,
title TEXT NOT NULL,
options TEXT DEFAULT NULL,
score DOUBLE,
PRIMARY KEY (questionid,examid)
);
INSERT INTO question VALUES('1','1',1 , 'title','option1_#_option2',1);
INSERT INTO question VALUES('2','1',2 , 'title','option1_#_option2',1);
INSERT INTO question VALUES('3','1',3 , 'title','option1_#_option2',1);
INSERT INTO question VALUES('4','1',4 , 'title','option1_#_option2',1);
INSERT INTO question VALUES('5','1',5, 'title','option1_#_option2',1);
SELECT * FROM question;

DROP TABLE IF EXISTS answer;
CREATE TABLE answer(
examid  VARCHAR(64) NOT NULL,
questionid VARCHAR(64)  NOT NULL ,
answer TEXT,
PRIMARY KEY (examid,questionid)
);
INSERT INTO answer VALUES('1','1', 'A');
INSERT INTO answer VALUES('1','2', 'A_#_B');
INSERT INTO answer VALUES('1','3', 'true');
INSERT INTO answer VALUES('1','4', 'tiankong');
INSERT INTO answer VALUES('1','5', 'zhuguan');
SELECT * FROM answer;


DROP TABLE IF EXISTS timer;
CREATE TABLE timer(
sid VARCHAR(20) NOT NULL,
examid  VARCHAR(64)  NOT NULL,
endtime TIMESTAMP,
PRIMARY KEY (sid,examid)
);
INSERT INTO timer VALUES('1','1',date_add(now(), interval 1 day));
SELECT * FROM timer;

DROP TABLE IF EXISTS studentanswer;
CREATE TABLE studentanswer(
sid VARCHAR(20) NOT NULL,
examid  VARCHAR(64)  NOT NULL,
questionid VARCHAR(64)  NOT NULL,
answer TEXT,
ismarked BOOLEAN DEFAULT false,
score DOUBLE DEFAULT -1,
PRIMARY KEY (sid,examid,questionid)
);
INSERT INTO studentanswer(sid,examid,questionid,answer) VALUES('1','1','1','1,4')
ON DUPLICATE KEY UPDATE answer='1,4';
SELECT * FROM studentanswer;

